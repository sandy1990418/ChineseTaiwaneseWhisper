# Define the number of worker connections
events {
    worker_connections 1024;  # Maximum number of simultaneous connections that can be opened by a worker process
}

http {
    # Define the group of servers available for load balancing
    upstream asr_service {
        server asr-service:8000;  # The name 'asr-service' should match the service name in docker-compose.yml
    }

    server {
        listen 80;  # Listen on port 80 for incoming HTTP requests
        server_name localhost;  # Respond to requests for 'localhost'
        client_max_body_size 0; # Do not restrict size
        # Main location block to handle requests
        location / {
            proxy_pass http://asr_service;  # Forward requests to the upstream group defined above
            # Pass along important headers to the upstream server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Specific location block for health check endpoint
        location /health {
            proxy_pass http://asr_service/health;  # Forward health check requests to the ASR service
            
            # Pass along important headers to the upstream server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }
}